javascript简介：
	基于对象和事件驱动的语言 、应用于客户端
	基于对象:提供好了很多对象，可以直接拿过来使用
	事件驱动：javascript做网站的动态效果
	客户端：浏览器
js的特点：
	1、交互性（信息的动态交互）
	2、安全性（不能访问本地磁盘）
	3、跨平台性（浏览器支持）
js的组成：
	三部分组成
	1、ECMAscript
		ECMA:欧洲计算机协会
	2、BOM
		浏览器对象模型
	3、DOM
		文档对象模型
javascript和html的结合方式（两种）
	1、使用一个标签<script type="text/javascript">js代码</script>
	2、使用script标签，引入一个js文件
		script标签里就不要写js代码
js的原始类型和声明变量
	定义变量：关键字 var
	js的原始类型：
		string 字符串
			var str = "abc";
		number 数字
			var num = 10;
		boolean   true和false
			var flag = true;
		null   对象引用为空，所有对象引用是object
		undifined 定义一个变量，没有赋值
	typeof();查看当前变量的数据类型
js的语句	
	if判断语句
	switch语句	
		switch（a）{
				case 3；
					alert("3");
				case 6；
					alert("6");
				default;
		}
	for:int写成var
	while
js的运算符	
	1、js里面不区分整数和小数
	2、字符串相加和java一样，做字符串连接
	3、字符串相减，执行减法运算，不是数字提示NaN
	4、boolean类型：
		如果设置成true，相当于这个值等于1.
		如果设置成false，相当于这个值等于0.
js数组
	可以存放不同数据类型的数据
	定义方式
	1、var arr = [1,2,3];
	2、使用内置的对象Array对象
		var arr1 = new Array(5);//数组长度是5
		var arr2 = new Array(1,2,3);
	数组的属性：length 	获取数组的长度
js的函数		
	定义函数
	1、使用关键字 function	
		function 方法名(参数列表){
			方法体;
			返回值可有可无；
		}
		调用：方法名();
	2、匿名函数
		function(参数列表){
			方法体和返回值；
		}
		调用：var add = function(参数列表){
			方法体和返回值；
		}
	3、使用js里面的内置对象 Function
		var add = new Function ("参数列表","方法体和返回值");
js的全局变量和局部变量
	全局变量：在script标签里面定义一个变量，这个变量在js部分都可以使用。
	局部变量：在方法内部定义一个变量，只能在方法内部使用。
script放的位置
	放在</body>后面
js的重载
	在js中，我们实现重载常用的方式有：
		1、根据传入参数的类型执行不同的操作。
		2、利用参数中特殊的参数值进行不同的操作。
		3、根据参数的个数进行重载。

CSS
	1、css简介
		css：层叠样式表
		层叠：一层一层的
		样式表：很多属性和属性值
		css将网页内容与显示样式进行分离，提高显示功能
	2、css和html的结合方式
		1、在每个HTML标签上都有一个属性style，把css和HTML结合在一起
		2、 使用html的一个标签实现<style>标签，写在head里面
			<style type="text/css">
				css代码
			</style>
		3、在style标签里面使用语句
			@import URL(css文件的路径)
		4、使用link标签，放在head里面，引入外部css文件
		优先级:由上到下，由外到内，优先级由低到高
			--后加载的优先级高
		格式 选择器名称{属性名：属性值;属性名：属性值;...}
	3、css的基本选择器
		标签选择器  使用标签名
		class选择器   .名称
		id选择器	#名称
		优先级：style>id>class >标签选择器
	4、css的扩展选择器
		关联选择器
			设置嵌套标签样式  div p{}
		组合选择器
			不同标签具有相同样式  div，p{}
		伪类元素选择器
			超链接状态
				1、原始：link
				2、悬停：hover
				3、点击：active
				4、点击之后：visited
				a:link {color: #FF0000}		/* 未访问的链接 */
				a:visited {color: #00FF00}	/* 已访问的链接 */
				a:hover {color: #FF00FF}	/* 鼠标移动到链接上 */
				a:active {color: #0000FF}	/* 选定的链接 */
	5、盒子模型
		边框 border: 2px solid red;
		内边距 padding：20px
		外边距 margin ：20px
		对数据进行操作，需要把数据放到一个区域里面（div）
	6、布局的漂浮
		float
			-left：后面的div放到右面
			-right：后面的div放到左面
	7、布局的定位
		position
			-absolute
				从文档流中拖出
			-relative
				不会从文档流中拖出
HTML
	1、操作思想
		使用标签把要操作的数据包起来，通过修改标签的属性值，来实现标签内数据样式的变化
	2、font标签 属性：size 取值范围1-7 	color：英文单词，十六进制数
	3、标题标签 <h1></h1>...<h6></h6>:从h1到h6越来越小，自动换行
	4、注释<!--html的注释 -->
	5、列表标签
		--<dl><dt></dt><dd></dd></dl>
		--有序<ol><li></li></ol>
		--无序<ul><li></li></ul>
	6、图像标签
		<img src="图片的路径" width="" heigth="" alt=""/>
	7、路径（相对路径）
			在同一级目录：直接写
			在下一级目录：images/1.jpg
			在上一层目录：../
	8、超链接标签
		<a href="路径">显示在页面上的内容</a>
		-打开方式 target="_self _blank"
		-默认是在当前界面打开
	9、表格标签
		<table>
			<tr>
				<td>
				</td>
			</tr>
		</table>
		-技巧：先数有多少行，数每行里面有多少个单元格
	10、表单标签
		<form></form>：
			-action:提交到地址
			-method：提交方式：常用的两种 get和post
			-get和post的区别：
				GET - 从指定的资源请求数据。
				POST - 向指定的资源提交要被处理的数据
			-enctype属性（上传时候使用）
		输入项：
			输入项里面写name属性
			普通输入项 <input type="text"/>
			密码：password
			单选框：radio
			复选框：checkbox
			下拉框
				<select name="">
					<option value="1"></option>
					<option value="2"></option>
					<option value="3"></option>
				</select>
			文本域
				<textarea cols="" rows="" name=""></textarea>
			文件 file
			提交按钮 submit
			重置 reset
			使用图片提交 <input type="image" src=""/>
			隐藏项 hidden
			普通按钮 button
	11、其他标签（b、u、i、s、pre、p、sub、sup、div、span）
	12、HTML头标签
	13、框架标签
	14、扩展a标签






	

	
		