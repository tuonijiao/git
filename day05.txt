方法：概述，重复使用，随时任意调用使用，{代码}。
方法就是一个工厂：
	参数（原料），进入方法的数据
	返回值（产出物），从方法中出来的数据
格式：
	修饰符  返回值类型  方法名称（参数类型 参数名称）{
		方法体
		return  返回值；
		}		
解释：
	修饰符：两个关键字，public static
	返回值类型：方法最终产生的数据是什么类型
	方法名称：自定义的名字，规则和变量一样
	参数类型：进入方法的数据是什么类型
	参数名称:   进入方法的数据，对应的变量名称
	方法体：    需要执行的若干行代码
	return：     结束当前方法，带着后面的返回值交给调用处
	返回值：     方法的最终数据结果
注意事项：
	返回值类型与返回值对应。
	参数有多个，使用逗号进行分隔。
	如果不需要参数，小括号可以留空。

定义方法三要素：
	返回值类型
	方法名称
	参数列表
注意事项：
	1、多个方法之间定义的前后顺序无所谓
	2、不能再一个方法的内部嵌套一个方法
	3、方法定义后，不会执行，只有调用后才会被执行
变量名称与方法名称
	1、变量名称可以与方法名称相同
	2、两个方法可以有相同名称的变量
没有参数情况，小括号留空。
定义方法求最大值：
	1、键盘输入Scanner
	2、定义方法的三要素
	3、调用方法，得到返回值
	4、打印最终结果 
返回值:有一个或者没有。
无返回值的方法定义格式：
	修饰符  void  方法名称（参数类型 参数名称）{
		方法体
		return  ；//省略不写
		}	
无返回值方法的基本使用：
	1、返回值类型void，判断是否有结果数据
	2、参数列表为null
	3、返回值和参数没有关系
无返回值的方法注意事项
	1、返回值没有，不能代表没有参数
	2、不能return一个具体的返回值
	3、最后一行是“return；”，可以不写
	4、只能使用单独调用，不能使用打印调用或者赋值调用
遍历：逐一挨个处理，默认遍历就是打印输出
遍历数组：将数组当中的每一个元素逐一打印出来 

方法的重载：
	参数列表个数不一样，需要记住多个名字
方法重载的使用（Overload）：
	方法名字相同，参数列表不同
注意事项：
	1、参数的个数不同
	2、参数的类型不同
	3、参数的多类型顺序不同
重载与下列因素无关
	1、重载与返回值类型无关，不能根据返回值类型重载
	2、重载与参数名称无关
参数传递（ParamBasic）：在调用方法时向方法内传入数据的动作
形式参数：在“定义”方法时，写再小括号里的参数
实际参数：在“调用”方法时，传入方法里的数据，叫实际参数
参数传递的过程，有【两项规则】：
	1、基本数据类型（以及string），形式参数参数的操作不会影响实际参数
	2、引用数据类型（除了string），形式参数操作会影响实际参数
调用方法的三种方式
	1、单独调用：方法名称（实际参数）；
	2、打印调用：System.out.println(方法名称（实际参数）)
	3、赋值调用：数据类型 变量名称 = 方法名称（实际参数）
	







